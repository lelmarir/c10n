/*
 * Copyright 2012 Rodion Moiseev (https://github.com/rodionmoiseev)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

configurations {
    guice
    guiceArchives
    testCompile.extendsFrom guice
}

dependencies {
    guice group: "org.reflections", name: "reflections", version: "0.9.12"
    guice group: 'com.google.inject', name: 'guice', version: '4.2.0'
    guice group: 'com.google.inject.extensions', name: 'guice-assistedinject', version: '4.2.0'

    testCompile group: 'commons-io', name: 'commons-io', version: '2.6'
}

sourceSets {
    guice {
        java {
            srcDir "src/ext/guice/java"
        }
        compileClasspath += sourceSets.main.output
        compileClasspath += configurations.provided
        compileClasspath += configurations.guice
    }
    test {
        compileClasspath += sourceSets.guice.output
        runtimeClasspath += sourceSets.guice.output
    }
}

def coreJarAppendix = "core"
def coreArtifact = "${project.archivesBaseName}-${coreJarAppendix}"
def guiceJarAppendix = "ext-guice"
def guiceArtifact = "${project.archivesBaseName}-${guiceJarAppendix}"

jar {
    appendix = coreJarAppendix
}

sourcesJar {
    appendix = coreJarAppendix
}

javadocJar {
    appendix = coreJarAppendix
}

task guiceJar(type: Jar, dependsOn: guiceClasses) {
    appendix = guiceJarAppendix
    from sourceSets.guice.output
}

task guiceSourcesJar(type: Jar, dependsOn: guiceClasses) {
    appendix = guiceJarAppendix
    classifier = "sources"
    from sourceSets.guice.allSource
}

task guiceJavadoc(type: Javadoc, dependsOn: guiceClasses) {
    source = sourceSets.guice.allJava
    classpath += sourceSets.main.output
    classpath += configurations.guice
}

task guiceJavadocJar(type: Jar, dependsOn: guiceJavadoc) {
    appendix = guiceJarAppendix
    classifier = 'javadoc'
    from guiceJavadoc
}

uploadArchives {
    repositories {
        mavenDeployer {
            addFilter(coreArtifact) { artifact, file ->
                artifact.name == coreArtifact
            }
            addFilter(guiceArtifact) { artifact, file ->
                artifact.name == guiceArtifact
            }
            commonPom(pom(coreArtifact))
            commonPom(pom(guiceArtifact))
            pom(guiceArtifact).scopeMappings.addMapping(1, configurations.guice, Conf2ScopeMappingContainer.COMPILE)
        }
    }
}

artifacts {
    archives guiceJar
    archives guiceSourcesJar
    archives guiceJavadocJar
}
